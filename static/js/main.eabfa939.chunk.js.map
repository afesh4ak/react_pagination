{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePageChange","page","className","href","onClick","Array","map","_","index","items","from","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","min","length","id","value","onChange","e","Number","target","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"2MASaA,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAmB,SAACC,GACpBA,GAAQ,GAAKA,GAAQJ,GAAcI,IAASN,GAC9CC,EAAaK,IAIjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBP,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRO,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBR,EAAoB,OAAS,QAC5CS,QAAS,kBAAMJ,EAAiBL,EAAc,IALhD,oBAUD,YAAIU,MAAMR,IAAaS,KAAI,SAACC,EAAGC,GAAJ,OAC1B,oBAEEN,UAAS,oBAAeP,IAAgBa,EAAQ,EAAI,SAAW,IAFjE,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVC,KAAI,WAAMK,EAAQ,GAClBJ,QAAS,kBAAMJ,EAAiBQ,EAAQ,IAJ1C,SAMGA,EAAQ,KAVb,eACeA,EAAQ,OAazB,oBAAIN,UAAS,oBAAeP,IAAgBE,EAAa,WAAa,IAAtE,SACE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAAeR,IAAgBE,EAAa,OAAS,QACrDO,QAAS,kBAAMJ,EAAiBL,EAAc,IALhD,wBC9CFc,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBT,KAAI,SAAAO,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgBwB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOtB,EAAP,KAAoBwB,EAApB,KAKA,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,oBACkCA,EAAc,GAAKD,EAAU,EAD/D,cACsEI,KAAKsB,IACvEzB,EAAcD,EACde,EAAMY,QAHV,eAIUZ,EAAMY,OAJhB,OAOA,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAO7B,EACP8B,SAAU,SAACC,GACTP,EAAWQ,OAAOD,EAAEE,OAAOJ,QAC3BJ,EAAe,IAPnB,UAUE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOgB,EAAMY,OACb3B,QAASA,EACTC,YAAaA,EACbC,aA3Ce,SAACK,GACpBkB,EAAelB,MA4Cb,6BACGQ,EACEoB,OAAOlC,EAAc,GAAKD,EAASC,EAAcD,GACjDY,KAAI,SAACwB,GAAD,OACH,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YE1DrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.eabfa939.chunk.js","sourcesContent":["import React from 'react';\n\ninterface PaginationProps {\n  total: number;\n  perPage: number;\n  currentPage?: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handlePageChange = (page: number) => {\n    if (page >= 1 && page <= totalPages && page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={() => handlePageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {[...Array(totalPages)].map((_, index) => (\n        <li\n          key={`page-${index + 1}`}\n          className={`page-item ${currentPage === index + 1 ? 'active' : ''}`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${index + 1}`}\n            onClick={() => handlePageChange(index + 1)}\n          >\n            {index + 1}\n          </a>\n        </li>\n      ))}\n      <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages ? 'true' : 'false'}\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${(currentPage - 1) * perPage + 1} - ${Math.min(\n          currentPage * perPage,\n          items.length,\n        )} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => {\n              setPerPage(Number(e.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {items\n          .slice((currentPage - 1) * perPage, currentPage * perPage)\n          .map((item) => (\n            <li key={item} data-cy=\"item\">\n              {item}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}